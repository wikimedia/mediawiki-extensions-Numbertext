<?php

require_once __DIR__ . '/../../Soros.php';

/**
 * Test class for Soros.
 * Generated by PHPUnit on 2013-01-11 at 03:29:26.
 *
 * @covers Soros
 */
class SorosTest extends PHPUnit\Framework\TestCase {

	public function test_ru_RU() {
		$this->assertTrue( mb_internal_encoding( 'UTF-8' ) );

		$contents = file_get_contents( __DIR__ . "/../../data/ru_RU.sor" );
		$this->assertFalse( $contents === false );

		$s = new Soros( $contents );

		$this->assertEquals( 'один', $s->run( '1' ) );
		$this->assertEquals( 'два', $s->run( '2' ) );
		$this->assertEquals( 'три', $s->run( '3' ) );
		$this->assertEquals( 'четыре', $s->run( '4' ) );
		$this->assertEquals( 'пять', $s->run( '5' ) );
		$this->assertEquals( 'шесть', $s->run( '6' ) );
		$this->assertEquals( 'семь', $s->run( '7' ) );
		$this->assertEquals( 'восемь', $s->run( '8' ) );
		$this->assertEquals( 'девять', $s->run( '9' ) );
		$this->assertEquals( 'десять', $s->run( '10' ) );
		$this->assertEquals( 'одиннадцать', $s->run( '11' ) );
		$this->assertEquals( 'двенадцать', $s->run( '12' ) );
		$this->assertEquals( 'тринадцать', $s->run( '13' ) );
		$this->assertEquals( 'четырнадцать', $s->run( '14' ) );
		$this->assertEquals( 'пятнадцать', $s->run( '15' ) );
		$this->assertEquals( 'шестнадцать', $s->run( '16' ) );
		$this->assertEquals( 'семнадцать', $s->run( '17' ) );
		$this->assertEquals( 'восемнадцать', $s->run( '18' ) );
		$this->assertEquals( 'девятнадцать', $s->run( '19' ) );

		$this->assertEquals( 'двадцать', $s->run( '20' ) );
		$this->assertEquals( 'двадцать один', $s->run( '21' ) );
		$this->assertEquals( 'двадцать два', $s->run( '22' ) );

		$this->assertEquals( 'тридцать', $s->run( '30' ) );
		$this->assertEquals( 'тридцать один', $s->run( '31' ) );
		$this->assertEquals( 'тридцать два', $s->run( '32' ) );

		$this->assertEquals( 'сорок', $s->run( '40' ) );
		$this->assertEquals( 'сорок один', $s->run( '41' ) );
		$this->assertEquals( 'сорок два', $s->run( '42' ) );

		$this->assertEquals( 'пятьдесят', $s->run( '50' ) );
		$this->assertEquals( 'пятьдесят один', $s->run( '51' ) );
		$this->assertEquals( 'пятьдесят два', $s->run( '52' ) );

		$this->assertEquals( 'шестьдесят', $s->run( '60' ) );
		$this->assertEquals( 'шестьдесят один', $s->run( '61' ) );
		$this->assertEquals( 'шестьдесят два', $s->run( '62' ) );
		$this->assertEquals( 'шестьдесят три', $s->run( '63' ) );
		$this->assertEquals( 'шестьдесят четыре', $s->run( '64' ) );

		$this->assertEquals( 'семьдесят', $s->run( '70' ) );
		$this->assertEquals( 'семьдесят один', $s->run( '71' ) );
		$this->assertEquals( 'семьдесят два', $s->run( '72' ) );

		$this->assertEquals( 'восемьдесят', $s->run( '80' ) );
		$this->assertEquals( 'восемьдесят один', $s->run( '81' ) );
		$this->assertEquals( 'восемьдесят два', $s->run( '82' ) );

		$this->assertEquals( 'девяносто', $s->run( '90' ) );
		$this->assertEquals( 'девяносто один', $s->run( '91' ) );
		$this->assertEquals( 'девяносто два', $s->run( '92' ) );

		$this->assertEquals( 'сто', $s->run( '100' ) );
		$this->assertEquals( 'сто один', $s->run( '101' ) );
		$this->assertEquals( 'сто два', $s->run( '102' ) );
		$this->assertEquals( 'сто десять', $s->run( '110' ) );
		$this->assertEquals( 'сто пятнадцать', $s->run( '115' ) );
		$this->assertEquals( 'сто двадцать два', $s->run( '122' ) );

		$this->assertEquals( 'двести', $s->run( '200' ) );
		$this->assertEquals( 'триста', $s->run( '300' ) );
		$this->assertEquals( 'четыреста', $s->run( '400' ) );
		$this->assertEquals( 'пятьсот', $s->run( '500' ) );
		$this->assertEquals( 'шестьсот', $s->run( '600' ) );
		$this->assertEquals( 'семьсот', $s->run( '700' ) );
		$this->assertEquals( 'восемьсот', $s->run( '800' ) );
		$this->assertEquals( 'девятьсот', $s->run( '900' ) );

		$this->assertEquals( 'одна тысяча', $s->run( '1000' ) );
		$this->assertEquals( 'одна тысяча один', $s->run( '1001' ) );
		$this->assertEquals( 'одна тысяча двенадцать', $s->run( '1012' ) );
		$this->assertEquals( 'одна тысяча сто двенадцать', $s->run( '1112' ) );

		$this->assertEquals( 'две тысячи', $s->run( '2000' ) );
		$this->assertEquals( 'три тысячи', $s->run( '3000' ) );
		$this->assertEquals( 'четыре тысячи', $s->run( '4000' ) );
		$this->assertEquals( 'пять тысяч', $s->run( '5000' ) );
		$this->assertEquals( 'шесть тысяч', $s->run( '6000' ) );
		$this->assertEquals( 'семь тысяч', $s->run( '7000' ) );
		$this->assertEquals( 'восемь тысяч', $s->run( '8000' ) );
		$this->assertEquals( 'девять тысяч', $s->run( '9000' ) );

		$this->assertEquals( 'десять тысяч', $s->run( '10000' ) );
		$this->assertEquals( 'десять тысяч один', $s->run( '10001' ) );
		$this->assertEquals( 'десять тысяч одиннадцать', $s->run( '10011' ) );
		$this->assertEquals( 'десять тысяч сто пять', $s->run( '10105' ) );
		$this->assertEquals( 'одиннадцать тысяч', $s->run( '11000' ) );
		$this->assertEquals( 'двенадцать тысяч триста сорок пять', $s->run( '12345' ) );
		$this->assertEquals( 'двадцать тысяч семьсот восемьдесят один', $s->run( '20781' ) );

		$this->assertEquals( 'сто тысяч', $s->run( '100000' ) );
		$this->assertEquals( 'сто тысяч один', $s->run( '100001' ) );
		$this->assertEquals( 'сто тысяч два', $s->run( '100002' ) );
		$this->assertEquals( 'сто тысяч десять', $s->run( '100010' ) );
		$this->assertEquals( 'сто тысяч триста тридцать', $s->run( '100330' ) );
		$this->assertEquals( 'сто тысяч девятьсот', $s->run( '100900' ) );
		$this->assertEquals( 'сто тысяч шестьсот три', $s->run( '100603' ) );
		$this->assertEquals( 'сто тысяч триста тридцать девять', $s->run( '100339' ) );

		$this->assertEquals( 'сто одна тысяча', $s->run( '101000' ) );
		$this->assertEquals( 'сто одна тысяча четыре', $s->run( '101004' ) );
		$this->assertEquals( 'сто одна тысяча двадцать пять', $s->run( '101025' ) );
		$this->assertEquals( 'сто одна тысяча двести сорок шесть', $s->run( '101246' ) );
		$this->assertEquals( 'сто две тысячи', $s->run( '102000' ) );
		$this->assertEquals( 'сто две тысячи семь', $s->run( '102007' ) );
		$this->assertEquals( 'сто две тысячи восемнадцать', $s->run( '102018' ) );
		$this->assertEquals( 'сто две тысячи пятьдесят девять', $s->run( '102059' ) );
		$this->assertEquals( 'сто две тысячи четыреста', $s->run( '102400' ) );
		$this->assertEquals( 'сто три тысячи', $s->run( '103000' ) );
		$this->assertEquals( 'сто три тысячи семьсот восемь', $s->run( '103708' ) );
		$this->assertEquals( 'сто четыре тысячи', $s->run( '104000' ) );
		$this->assertEquals( 'сто пять тысяч', $s->run( '105000' ) );
		$this->assertEquals( 'сто шесть тысяч', $s->run( '106000' ) );
		$this->assertEquals( 'сто семь тысяч три', $s->run( '107003' ) );
		$this->assertEquals( 'сто восемь тысяч два', $s->run( '108002' ) );
		$this->assertEquals( 'сто девять тысяч один', $s->run( '109001' ) );

		$this->assertEquals( 'сто десять тысяч', $s->run( '110000' ) );
		$this->assertEquals( 'сто тридцать одна тысяча', $s->run( '131000' ) );
		$this->assertEquals( 'сто двадцать две тысячи', $s->run( '122000' ) );
		$this->assertEquals( 'сто сорок две тысячи восемьсот семьдесят шесть', $s->run( '142876' ) );
		$this->assertEquals( 'сто пятьдесят одна тысяча пятьсот сорок три', $s->run( '151543' ) );

		$this->assertEquals( 'двести тысяч', $s->run( '200000' ) );
		$this->assertEquals( 'двести две тысячи', $s->run( '202000' ) );
		$this->assertEquals( 'триста тысяч', $s->run( '300000' ) );

		$this->assertEquals( 'один миллион', $s->run( '1000000' ) );
		$this->assertEquals( 'два миллиона', $s->run( '2000000' ) );
		$this->assertEquals( 'три миллиона', $s->run( '3000000' ) );
		$this->assertEquals( 'четыре миллиона', $s->run( '4000000' ) );
		$this->assertEquals( 'пять миллионов', $s->run( '5000000' ) );
		$this->assertEquals( 'шесть миллионов сто две тысячи девяносто девять', $s->run( '6102099' ) );
		$this->assertEquals( 'семь миллионов десять тысяч сто', $s->run( '7010100' ) );

		$this->assertEquals( 'десять миллионов десять тысяч десять', $s->run( '10010010' ) );
		$this->assertEquals( 'двадцать миллионов двадцать тысяч двести', $s->run( '20020200' ) );
		$this->assertEquals( 'двадцать один миллион двадцать одна тысяча двадцать один', $s->run( '21021021' ) );
		$this->assertEquals( 'двадцать два миллиона двадцать две тысячи двадцать два', $s->run( '22022022' ) );
		$this->assertEquals( 'двадцать пять миллионов двадцать пять тысяч двадцать пять', $s->run( '25025025' ) );
		$this->assertEquals( 'тридцать миллионов', $s->run( '30000000' ) );

		$this->assertEquals( 'сто миллионов', $s->run( '100000000' ) );
		$this->assertEquals( 'сто один миллион', $s->run( '101000000' ) );
		$this->assertEquals( 'сто два миллиона', $s->run( '102000000' ) );
		$this->assertEquals( 'сто три миллиона', $s->run( '103000000' ) );
		$this->assertEquals( 'сто четыре миллиона', $s->run( '104000000' ) );
		$this->assertEquals( 'сто пять миллионов', $s->run( '105000000' ) );
		$this->assertEquals( 'сто десять миллионов', $s->run( '110000000' ) );
		$this->assertEquals( 'сто девяносто миллионов', $s->run( '190000000' ) );
		$this->assertEquals( 'сто девяносто один миллион', $s->run( '191000000' ) );
		$this->assertEquals( 'сто девяносто два миллиона', $s->run( '192000000' ) );
		$this->assertEquals( 'пятьсот пятьдесят пять миллионов', $s->run( '555000000' ) );
		$this->assertEquals( 'девятьсот восемьдесят семь миллионов шестьсот пятьдесят четыре тысячи триста двадцать один', $s->run( '987654321' ) );

		$this->assertEquals( 'один миллиард', $s->run( '1000000000' ) );
		$this->assertEquals( 'два миллиарда', $s->run( '2000000000' ) );
		$this->assertEquals( 'три миллиарда четыреста пятьдесят шесть миллионов семьсот восемьдесят девять тысяч сто двадцать три', $s->run( '3456789123' ) );

		$this->assertEquals( 'один миллиард двести тридцать четыре миллиона пятьсот шестьдесят семь тысяч восемьсот девяносто один', $s->run( '1234567891' ) );
		$this->assertEquals( 'двенадцать миллиардов триста сорок пять миллионов шестьсот семьдесят восемь тысяч девятьсот двенадцать', $s->run( '12345678912' ) );
		$this->assertEquals( 'сто двадцать три миллиарда четыреста пятьдесят шесть миллионов семьсот восемьдесят девять тысяч сто двадцать три', $s->run( '123456789123' ) );
		$this->assertEquals( 'два триллиона триста сорок пять миллиардов шестьсот семьдесят восемь миллионов девятьсот двенадцать тысяч триста сорок пять', $s->run( '2345678912345' ) );
		$this->assertEquals( 'тридцать четыре триллиона пятьсот шестьдесят семь миллиардов восемьсот девяносто один миллион двести тридцать четыре тысячи пятьсот шестьдесят семь', $s->run( '34567891234567' ) );
		$this->assertEquals( 'четыреста пятьдесят шесть триллионов семьсот восемьдесят девять миллиардов сто двадцать три миллиона четыреста пятьдесят шесть тысяч семьсот восемьдесят девять', $s->run( '456789123456789' ) );
		$this->assertEquals( 'пять квадриллионов шестьсот семьдесят восемь триллионов девятьсот двенадцать миллиардов триста сорок пять миллионов шестьсот семьдесят восемь тысяч девятьсот двенадцать', $s->run( '5678912345678912' ) );
		$this->assertEquals( 'шестьдесят семь квадриллионов восемьсот девяносто один триллион двести тридцать четыре миллиарда пятьсот шестьдесят семь миллионов восемьсот девяносто одна тысяча двести тридцать четыре', $s->run( '67891234567891234' ) );
		$this->assertEquals( 'семьсот восемьдесят девять квадриллионов сто двадцать три триллиона четыреста пятьдесят шесть миллиардов семьсот восемьдесят девять миллионов сто двадцать три тысячи четыреста пятьдесят шесть', $s->run( '789123456789123456' ) );
		$this->assertEquals( 'восемь квинтиллионов девятьсот двенадцать квадриллионов триста сорок пять триллионов шестьсот семьдесят восемь миллиардов девятьсот двенадцать миллионов триста сорок пять тысяч шестьсот семьдесят восемь', $s->run( '8912345678912345678' ) );
		$this->assertEquals( 'девяносто один квинтиллион двести тридцать четыре квадриллиона пятьсот шестьдесят семь триллионов восемьсот девяносто один миллиард двести тридцать четыре миллиона пятьсот шестьдесят семь тысяч восемьсот девяносто один', $s->run( '91234567891234567891' ) );
		$this->assertEquals( 'сто одиннадцать квинтиллионов сто одиннадцать квадриллионов сто одиннадцать триллионов сто одиннадцать миллиардов сто одиннадцать миллионов сто одиннадцать тысяч сто одиннадцать', $s->run( '111111111111111111111' ) );
		$this->assertEquals( 'два секстилиона двести двадцать два квинтиллиона двести двадцать два квадриллиона двести двадцать два триллиона двести двадцать два миллиарда двести двадцать два миллиона двести двадцать две тысячи двести двадцать два', $s->run( '2222222222222222222222' ) );
		$this->assertEquals( 'тридцать три секстилиона триста тридцать три квинтиллиона триста тридцать три квадриллиона триста тридцать три триллиона триста тридцать три миллиарда триста тридцать три миллиона триста тридцать три тысячи триста тридцать три', $s->run( '33333333333333333333333' ) );
		$this->assertEquals( 'четыреста сорок четыре секстилиона четыреста сорок четыре квинтиллиона четыреста сорок четыре квадриллиона четыреста сорок четыре триллиона четыреста сорок четыре миллиарда четыреста сорок четыре миллиона четыреста сорок четыре тысячи четыреста сорок четыре', $s->run( '444444444444444444444444' ) );
		$this->assertEquals( 'пять септиллионов пятьсот пятьдесят пять секстилионов пятьсот пятьдесят пять квинтиллионов пятьсот пятьдесят пять квадриллионов пятьсот пятьдесят пять триллионов пятьсот пятьдесят пять миллиардов пятьсот пятьдесят пять миллионов пятьсот пятьдесят пять тысяч пятьсот пятьдесят пять', $s->run( '5555555555555555555555555' ) );
		$this->assertEquals( 'шестьдесят шесть септиллионов шестьсот шестьдесят шесть секстилионов шестьсот шестьдесят шесть квинтиллионов шестьсот шестьдесят шесть квадриллионов шестьсот шестьдесят шесть триллионов шестьсот шестьдесят шесть миллиардов шестьсот шестьдесят шесть миллионов шестьсот шестьдесят шесть тысяч шестьсот шестьдесят шесть', $s->run( '66666666666666666666666666' ) );
		$this->assertEquals( 'семьсот семьдесят семь септиллионов семьсот семьдесят семь секстилионов семьсот семьдесят семь квинтиллионов семьсот семьдесят семь квадриллионов семьсот семьдесят семь триллионов семьсот семьдесят семь миллиардов семьсот семьдесят семь миллионов семьсот семьдесят семь тысяч семьсот семьдесят семь', $s->run( '777777777777777777777777777' ) );
	}

}
